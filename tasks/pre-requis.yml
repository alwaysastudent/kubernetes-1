- name: Configure yum
  template:
    src: "{{ item }}"
    dest: "/etc/yum.repos.d/"
    mode: 0644
  with_fileglob:
    - "../templates/*.repo"

- name: Check kubeadm package status
  yum: list=kubeadm
  register: kubeadm_package

- name: Install kubernetes packages
  yum:
    name:
      - kubelet-{{ kubernetes_version }}
      - kubeadm-{{ kubernetes_version }}
      - kubectl-{{ kubernetes_version }}
      - iptables-services
    enablerepo: kubernetes
    state: present
  when: 'kubeadm_package.results|length == 0 or kubeadm_package.results[0].yumstate != "installed"'

## Hack de contournement de la policy FORWARD a DROP de docker...
- name: Get host services
  service_facts:

- name: Configure iptables rules for docker
  copy:
    remote_src: no
    src: "{{ role_path }}/files/iptables"
    dest: /etc/sysconfig/iptables
    mode: 0600
  register: iptablesRules
  when: "'docker.service' in services"

- name: Enable and start iptables service
  systemd:
    name: iptables
    state: started
    enabled: yes

- name: Restart docker service to take new iptables rules into account
  systemd:
    name: docker
    state: restarted
  when: "'docker.service' in services and iptablesRules.changed"
# fin du hack

- block:
  - name: Configure iptables FORWARD policy to ACCEPT
    iptables:
      chain: FORWARD
      policy: ACCEPT
    register: policyForward

  - name: Save iptables rules
    command: service iptables save
    when: policyForward.changed
  when: 'not "docker.service" in services'

- name: Set sysctl parameters required by kubernetes
  sysctl:
    name: "{{ item }}"
    value: '1'
    state: present
    sysctl_file: "/etc/sysctl.d/k8s.conf"
  with_items:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables

- name: Ensure ipvs kernel modules are loadable
  modprobe:
    name: "{{ item }}"
  with_items:
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
  when: kubernetes_proxy_mode == "ipvs"

- name: Install IPSet package
  yum:
    name: ipset
    state: present
  when: kubernetes_proxy_mode == "ipvs"
