- name: Dépose la configuration yum
  template:
    src: "{{ item }}"
    dest: "/etc/yum.repos.d/"
    mode: 0644
  with_fileglob:
    - "../templates/*.repo"

- name: Vérifie la présence de kubeadm
  yum: list=kubeadm
  register: kubeadm_package

- name: Installation des paquets kubernetes
  yum:
    name:
      - kubelet-{{ kubernetes_version }}
      - kubeadm-{{ kubernetes_version }}
      - kubectl-{{ kubernetes_version }}
      - iptables-services
    enablerepo: kubernetes
    state: present
  when: 'kubeadm_package.results|length == 0 or kubeadm_package.results[0].yumstate != "installed"'

## Hack de contournement de la policy FORWARD a DROP de docker...
- name: Récupère les services du host
  service_facts:

- name: Configure les règles iptables pour docker
  copy:
    remote_src: no
    src: "{{ role_path }}/files/iptables"
    dest: /etc/sysconfig/iptables
    mode: 0600
  register: iptablesRules
  when: "'docker.service' in services"

- name: Active et démarre le service iptables
  systemd:
    name: iptables
    state: started
    enabled: yes

- name: Redémarre le service docker pour prise en compte des regles iptables
  systemd:
    name: docker
    state: restarted
  when: "'docker.service' in services and iptablesRules.changed"
# fin du hack

- block:
  - name: Configure la policy FORWARD a ACCEPT
    iptables:
      chain: FORWARD
      policy: ACCEPT
    register: policyForward

  - name: Sauvegarde les règles iptables
    command: service iptables save
    when: policyForward.changed
  when: 'not "docker.service" in services'

- name: Applique les paramètres sysctl
  sysctl:
    name: "{{ item }}"
    value: '1'
    state: present
    sysctl_file: "/etc/sysctl.d/k8s.conf"
  with_items:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables

- name: Charge les modules ipvs
  modprobe:
    name: "{{ item }}"
  with_items:
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
  when: kubernetes_proxy_mode == "ipvs"

- name: Installe le paquet IPSet
  yum:
    name: ipset
    state: present
  when: kubernetes_proxy_mode == "ipvs"
