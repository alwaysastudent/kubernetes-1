---
- name: KVM hosts
  hosts: all
  gather_facts: no
  tasks:
    - name: Ajoute les entrées dans /etc/hosts de l'hote local
      lineinfile:
        line: "{{ansible_host}} {{inventory_hostname}}"
        path: /etc/hosts
        regexp: '^.* {{inventory_hostname}}'
      delegate_to: localhost
      become: yes


- name: VMs networking
  hosts: all
  tasks:
    - name: Supprime la route par défaut utilisant l'interface de management
      lineinfile:
        line: DEFROUTE="no"
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        regexp: '^DEFROUTE='
      register: routes

    - name: Ajoute la route statique vers le reseau principal
      copy:
        content: 10.0.4.0/24 via 192.168.121.1 dev eth0
        dest: /etc/sysconfig/network-scripts/route-eth0
      register: static_route

    - name: Redémarre les serveurs pour prise en compte des routes
      reboot:
      when: routes.changed or static_route.changed

- name: Prepare k8s hosts
  hosts: kubernetes
  gather_facts: true
  tasks:
    - name: Crée le répetoire de configuration docker
      file:
        state: directory
        path: /etc/docker
        mode: 0755

    - name: Configure docker
      copy:
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2",
            "storage-opts": [
              "overlay2.override_kernel_check=true"
            ]
          }
        dest: /etc/docker/daemon.json

    - name: "Install docker"
      include_role:
        name: "geerlingguy.docker"

    - name: "Disable swap"
      shell: swapoff -a

    - name: Disable SWAP in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+.*)$'
        replace: '# \1'

- name: Prepare haProxy nodes
  hosts: loadbalancer
  gather_facts: true
  tasks:
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive

    - name: Disable firewalld
      systemd:
        name: firewalld
        enabled: no
        state: stopped

    - name: Flush existing iptables rules
      iptables:
        flush: yes

    - name: List load balanced items
      set_fact:
        apiServers: "{{apiServers | default([]) + [{'name': item, 'address': item + ':6443'}]}}"
      with_items: "{{groups['kubernetes_masters']}}"

    - name: "Print apiServers loadbalanced"
      debug: var=apiServers

    - name: "Install HaProxy"
      include_role:
        name: "geerlingguy.haproxy"
      vars:
        haproxy_frontend_name: 'apiServer'
        haproxy_frontend_port: 6443
        haproxy_frontend_mode: 'tcp'
        haproxy_backend_name: 'apiServerBackend'
        haproxy_backend_mode: 'tcp'
        haproxy_backend_httpchk: ''
        haproxy_backend_servers: "{{apiServers}}"
